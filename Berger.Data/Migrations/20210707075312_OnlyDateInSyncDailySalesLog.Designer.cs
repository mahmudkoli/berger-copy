// <auto-generated />
using System;
using Berger.Data.MsfaEntity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Berger.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210707075312_OnlyDateInSyncDailySalesLog")]
    partial class OnlyDateInSyncDailySalesLog
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Berger.Data.MsfaEntity.CollectionEntry.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CollectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditControlAreaId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManualNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SapId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreditControlAreaId");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerFocus.DealerOpening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrentApprovarId")
                        .HasColumnType("int");

                    b.Property<int>("DealerOpeningStatus")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NextApprovarId")
                        .HasColumnType("int");

                    b.Property<string>("SaleGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaleOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Territory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentApprovarId");

                    b.HasIndex("NextApprovarId");

                    b.ToTable("DealerOpenings");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerFocus.DealerOpeningAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DealerOpeningId")
                        .HasColumnType("int");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealerOpeningId");

                    b.ToTable("DealerOpeningAttachments");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerFocus.DealerOpeningLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DealerOpeningId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealerOpeningId");

                    b.HasIndex("UserId");

                    b.ToTable("DealerOpeningLogs");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerFocus.FocusDealer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("Date");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("FocusDealers");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerSalesCall.DealerCompetitionSales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ActualMTDSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AverageMonthlySales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("DealerSalesCallId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DealerSalesCallId");

                    b.ToTable("DealerCompetitionSales");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerSalesCall.DealerSalesCall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BPBLActualMTDSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BPBLAverageMonthlySales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CompetitionProductDisplayBetterThanBPBLRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetitionProductDisplayImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetitionSchemeModalityComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetitionSchemeModalityImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetitionServiceBetterThanBPBLRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetitionShopBoysComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<int>("DealerSatisfactionId")
                        .HasColumnType("int");

                    b.Property<string>("DealerSatisfactionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasBPBLSales")
                        .HasColumnType("bit");

                    b.Property<bool>("HasCompetitionPresence")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDealerSalesIssue")
                        .HasColumnType("bit");

                    b.Property<bool>("HasOS")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPainterInfluence")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSlippage")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSubDealerInfluence")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCBInstalled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCBProductivityCommunicated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompetitionProductDisplayBetterThanBPBL")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompetitionServiceBetterThanBPBL")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOSCommunicated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPremiumProductCommunicated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPremiumProductLifting")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShopManMerchendizingImprovementDiscussed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShopManProductKnowledgeDiscussed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShopManSalesTechniquesDiscussed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSlippageCommunicated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubDealerCall")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTargetCommunicated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTargetPromotionCommunicated")
                        .HasColumnType("bit");

                    b.Property<int?>("JourneyPlanId")
                        .HasColumnType("int");

                    b.Property<int?>("MerchendisingId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PainterInfluenceId")
                        .HasColumnType("int");

                    b.Property<int?>("PremiumProductLiftingId")
                        .HasColumnType("int");

                    b.Property<string>("PremiumProductLiftingOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecondarySalesRatingsId")
                        .HasColumnType("int");

                    b.Property<string>("SecondarySalesReasonRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondarySalesReasonTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubDealerInfluenceId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealerId");

                    b.HasIndex("DealerSatisfactionId");

                    b.HasIndex("JourneyPlanId");

                    b.HasIndex("MerchendisingId");

                    b.HasIndex("PainterInfluenceId");

                    b.HasIndex("PremiumProductLiftingId");

                    b.HasIndex("SecondarySalesRatingsId");

                    b.HasIndex("SubDealerInfluenceId");

                    b.HasIndex("UserId");

                    b.ToTable("DealerSalesCalls");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerSalesCall.DealerSalesIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CBMachineMantainanceId")
                        .HasColumnType("int");

                    b.Property<string>("CBMachineMantainanceRegularReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DealerSalesCallId")
                        .HasColumnType("int");

                    b.Property<int>("DealerSalesIssueCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("HasCBMachineMantainance")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CBMachineMantainanceId");

                    b.HasIndex("DealerSalesCallId");

                    b.HasIndex("DealerSalesIssueCategoryId");

                    b.HasIndex("PriorityId");

                    b.ToTable("DealerSalesIssues");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerSalesCall.EmailConfigForDealerSalesCall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DealerSalesIssueCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealerSalesIssueCategoryId");

                    b.ToTable("EmailConfigForDealerSalesCalls");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerSalesCall.MerchandisingSnapShot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MerchandisingSnapShotCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OthersSnapShotCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealerId");

                    b.HasIndex("MerchandisingSnapShotCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("MerchandisingSnapShots");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DemandGeneration.LeadBusinessAchievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BergerPremiumBrandSalesValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BergerValueSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CompetitionValueSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsColorSchemeGiven")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductSampling")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NextVisitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhotoCaptureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductSamplingBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductSourcing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksOrOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeadBusinessAchievements");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DemandGeneration.LeadFollowUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ActualPaintJobCompletedExteriorPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ActualPaintJobCompletedInteriorPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ActualVisitDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ActualVolumeSoldExteriorGallon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ActualVolumeSoldExteriorKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ActualVolumeSoldInteriorGallon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ActualVolumeSoldInteriorKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ActualVolumeSoldTopCoatGallon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ActualVolumeSoldUnderCoatGallon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BrandUsedExteriorBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandUsedInteriorBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandUsedTopCoatBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandUsedUnderCoatBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BusinessAchievementId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExpectedMonthlyBusinessValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExpectedMonthlyBusinessValueChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExpectedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExpectedValueChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasSwappingCompetition")
                        .HasColumnType("bit");

                    b.Property<string>("KeyContactPersonMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyContactPersonMobileChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyContactPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyContactPersonNameChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastVisitedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeadGenerationId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NextVisitDatePlan")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfStoriedBuilding")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfStoriedBuildingChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaintContractorMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaintContractorMobileChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaintContractorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaintContractorNameChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectStatusLeadCompletedId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProjectStatusPartialBusinessPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectStatusTotalLossRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SwappingCompetitionAnotherCompetitorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SwappingCompetitionId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPaintingAreaSqftExterior")
                        .HasColumnType("int");

                    b.Property<string>("TotalPaintingAreaSqftExteriorChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPaintingAreaSqftInterior")
                        .HasColumnType("int");

                    b.Property<string>("TotalPaintingAreaSqftInteriorChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfClientId")
                        .HasColumnType("int");

                    b.Property<string>("UpTradingFromBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpTradingToBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessAchievementId");

                    b.HasIndex("LeadGenerationId");

                    b.HasIndex("ProjectStatusId");

                    b.HasIndex("ProjectStatusLeadCompletedId");

                    b.HasIndex("SwappingCompetitionId");

                    b.HasIndex("TypeOfClientId");

                    b.ToTable("LeadFollowUps");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DemandGeneration.LeadGeneration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Depot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedDateOfPainting")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExpectedMonthlyBusinessValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExpectedMonthlyBusinessValueChangeCount")
                        .HasColumnType("int");

                    b.Property<decimal>("ExpectedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExpectedValueChangeCount")
                        .HasColumnType("int");

                    b.Property<string>("KeyContactPersonMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyContactPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NextFollowUpDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfStoriedBuilding")
                        .HasColumnType("int");

                    b.Property<string>("OtherClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaintContractorMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaintContractorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaintingStageId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoCaptureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProductSamplingRequired")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequirementOfColorScheme")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Territory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPaintingAreaSqftExterior")
                        .HasColumnType("int");

                    b.Property<int>("TotalPaintingAreaSqftExteriorChangeCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalPaintingAreaSqftInterior")
                        .HasColumnType("int");

                    b.Property<int>("TotalPaintingAreaSqftInteriorChangeCount")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfClientId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PaintingStageId");

                    b.HasIndex("TypeOfClientId");

                    b.HasIndex("UserId");

                    b.ToTable("LeadGenerations");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.ELearningAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ELearningDocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ELearningDocumentId");

                    b.ToTable("ELearningAttachments");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.ELearningDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ELearningDocuments");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ELearningDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ELearningDocumentId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.QuestionOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOptions");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.QuestionSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ELearningDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PassMark")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalMark")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ELearningDocumentId");

                    b.ToTable("QuestionSets");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.QuestionSetCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionSetId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuestionSetId");

                    b.ToTable("QuestionSetCollections");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.UserQuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Passed")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionSetId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalCorrectAnswer")
                        .HasColumnType("int");

                    b.Property<int>("TotalMark")
                        .HasColumnType("int");

                    b.Property<int>("UserInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionSetId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("UserQuestionAnswers");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.UserQuestionAnswerCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("bit");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserQuestionAnswerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserQuestionAnswerId");

                    b.ToTable("UserQuestionAnswerCollections");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.EmailLog.EmailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachmenturl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FailResoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailLogs");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Examples.Example", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Examples");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Hirearchy.SaleGroup", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SaleGroup");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Hirearchy.SaleOffice", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SaleOffice");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Hirearchy.Territory", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Territory");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Hirearchy.Zone", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Zone");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.JourneyPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCount")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeRegId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("JourneyPlans");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.JourneyPlanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<int?>("JourneyPlanMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("JourneyPlanMasterId");

                    b.ToTable("JourneyPlanDetails");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.JourneyPlanMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCount")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LineManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlanDate")
                        .HasColumnType("Date");

                    b.Property<int>("PlanStatus")
                        .HasColumnType("int");

                    b.Property<int>("RejectedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("RejectedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("JourneyPlanMasters");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.KPI.CollectionConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChangeableMaxDateDay")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CollectionConfigs");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.KPI.CollectionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CollectionActualAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CollectionTargetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<decimal>("SlippageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SlippageCollectionActualAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Territory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CollectionPlans");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Master.CreditControlArea", b =>
                {
                    b.Property<int>("CreditControlAreaId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CreditControlAreaId");

                    b.ToTable("CreditControlAreas");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Master.CustomerGroup", b =>
                {
                    b.Property<string>("CustomerAccountGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("CustomerGroups");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Master.Depot", b =>
                {
                    b.Property<string>("Achvm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adrnr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Awsls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bedpl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Betol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bwkey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bzirk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bzqhl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chazv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChazvOld")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cityc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Counc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepStore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dvsart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ekorg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabkl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fprfw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FshBomMaintenance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FshMgArunReq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FshSeaim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iwerk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("J1bbranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kkowk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kordb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kunnr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Land1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Let01")
                        .HasColumnType("float");

                    b.Property<double?>("Let02")
                        .HasColumnType("float");

                    b.Property<double?>("Let03")
                        .HasColumnType("float");

                    b.Property<string>("Lifnr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mandt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mgvlareval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mgvlaupd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mgvupd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nodetype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nschema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oihcredipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oihvtype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oilival")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ort01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pfach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pkosa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pstlz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sourcing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Storetype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taxiw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Txjcd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxnamMa1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxnamMa2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxnamMa3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vkorg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vlfkz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vstel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vtbfi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vtweg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Werks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wksop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone1")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Depots");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Master.Division", b =>
                {
                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DivisionCode")
                        .HasColumnType("float");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Menus.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconClass")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsParent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTitle")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Menus.MenuActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuActivities");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Menus.MenuActivityPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanInsert")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanView")
                        .HasColumnType("bit");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuActivityPermissions");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Menus.MenuPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpRoleId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuPermissions");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.PainterRegistration.AttachedDealerPainter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dealer")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PainterId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PainterId");

                    b.ToTable("AttachedDealerPainters");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.PainterRegistration.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.PainterRegistration.Painter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccDbblHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccDbblNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachedDealerCd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AvgMonthlyVal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BrithCertificateNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Depot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasDbbl")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAppInstalled")
                        .HasColumnType("bit");

                    b.Property<float>("Loyality")
                        .HasColumnType("real");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalIdNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfPainterAttached")
                        .HasColumnType("int");

                    b.Property<int>("PainterCatId")
                        .HasColumnType("int");

                    b.Property<string>("PainterImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PainterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaleGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Territory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PainterCatId");

                    b.ToTable("Painters");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.PainterRegistration.PainterAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PainterId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PainterId");

                    b.ToTable("PainterAttachments");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.PainterRegistration.PainterCall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasAppUsage")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDbblIssue")
                        .HasColumnType("bit");

                    b.Property<bool>("HasNewProBriefing")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPremiumProtBriefing")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSchemeComnunaction")
                        .HasColumnType("bit");

                    b.Property<bool>("HasUsageEftTools")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PainterId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("WorkInHandNumber")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PainterId");

                    b.ToTable("PainterCalls");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.PainterRegistration.PainterCompanyMTDValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<float>("CountInPercent")
                        .HasColumnType("real");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PainterCallId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PainterCallId");

                    b.ToTable("PainterCompanyMTDValues");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.SAPTables.BrandFamilyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MatarialGroupOrBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatarialGroupOrBrandFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatarialGroupOrBrandFamilyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatarialGroupOrBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BrandFamilyInfos");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.SAPTables.BrandInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCBInstalled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnamel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLiquid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMTS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPowder")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialGroupOrBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrandInfos");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.SAPTables.BrandInfoStatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandInfoId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandInfoId");

                    b.HasIndex("UserId");

                    b.ToTable("BrandInfoStatusLogs");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.SAPTables.DealerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Channel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClubSupremeType")
                        .HasColumnType("int");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CreatedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditControlArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerClasification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayLimit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExclusive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLastYearAppointed")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PriceGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Territory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalDue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DealerInfos");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.SAPTables.DealerInfoStatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DealerInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealerInfoId");

                    b.HasIndex("UserId");

                    b.ToTable("DealerInfoStatusLogs");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.SAPTables.RPRSPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromDaysLimit")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationDays")
                        .HasColumnType("int");

                    b.Property<int>("RPRSDays")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("ToDaysLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RPRSPolicies");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Scheme.SchemeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Benefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenefitDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BenefitEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BenefitStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RateInDrum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RateInLtrOrKg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchemeMasterId")
                        .HasColumnType("int");

                    b.Property<string>("Slab")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TargetVolume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SchemeMasterId");

                    b.ToTable("SchemeDetails");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Scheme.SchemeMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessArea")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchemeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SchemeMasters");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Setup.DropdownDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DropdownCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DropdownName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("DropdownDetails");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Setup.DropdownType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("DropdownTypes");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Setup.EmailConfigForDealerOppening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmailConfigForDealerOppenings");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Sync.SyncDailySalesLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessArea")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditControlArea")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("NetAmount")
                        .HasColumnType("float");

                    b.Property<string>("SalesGroup")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TerritoryName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("SyncDailySalesLogs");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Tinting.TintingMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Contribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Depot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("NoOfActiveMachine")
                        .HasColumnType("int");

                    b.Property<int>("NoOfCorrection")
                        .HasColumnType("int");

                    b.Property<int>("NoOfInactiveMachine")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Territory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("TintingMachines");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Users.LoginLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FCMToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LoggedInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoggedOutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Users.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Users.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeRole")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Users.UserRoleMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("UserRoleMapping");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Users.UserZoneAreaMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOfficeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TerritoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserInfoId")
                        .HasColumnType("int");

                    b.Property<string>("ZoneId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserInfoId");

                    b.ToTable("UserZoneAreaMappings");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.CollectionEntry.Payment", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Master.CreditControlArea", "CreditControlArea")
                        .WithMany()
                        .HasForeignKey("CreditControlAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "CustomerType")
                        .WithMany()
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerFocus.DealerOpening", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "CurrentApprovar")
                        .WithMany()
                        .HasForeignKey("CurrentApprovarId");

                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "NextApprovar")
                        .WithMany()
                        .HasForeignKey("NextApprovarId");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerFocus.DealerOpeningAttachment", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.DealerFocus.DealerOpening", null)
                        .WithMany("DealerOpeningAttachments")
                        .HasForeignKey("DealerOpeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerFocus.DealerOpeningLog", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.DealerFocus.DealerOpening", "DealerOpening")
                        .WithMany("dealerOpeningLogs")
                        .HasForeignKey("DealerOpeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerSalesCall.DealerCompetitionSales", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.DealerSalesCall.DealerSalesCall", "DealerSalesCall")
                        .WithMany("DealerCompetitionSales")
                        .HasForeignKey("DealerSalesCallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerSalesCall.DealerSalesCall", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.SAPTables.DealerInfo", "Dealer")
                        .WithMany()
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "DealerSatisfaction")
                        .WithMany()
                        .HasForeignKey("DealerSatisfactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.JourneyPlanMaster", "JourneyPlan")
                        .WithMany()
                        .HasForeignKey("JourneyPlanId");

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "Merchendising")
                        .WithMany()
                        .HasForeignKey("MerchendisingId");

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "PainterInfluence")
                        .WithMany()
                        .HasForeignKey("PainterInfluenceId");

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "PremiumProductLifting")
                        .WithMany()
                        .HasForeignKey("PremiumProductLiftingId");

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "SecondarySalesRatings")
                        .WithMany()
                        .HasForeignKey("SecondarySalesRatingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "SubDealerInfluence")
                        .WithMany()
                        .HasForeignKey("SubDealerInfluenceId");

                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerSalesCall.DealerSalesIssue", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "CBMachineMantainance")
                        .WithMany()
                        .HasForeignKey("CBMachineMantainanceId");

                    b.HasOne("Berger.Data.MsfaEntity.DealerSalesCall.DealerSalesCall", "DealerSalesCall")
                        .WithMany("DealerSalesIssues")
                        .HasForeignKey("DealerSalesCallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "DealerSalesIssueCategory")
                        .WithMany()
                        .HasForeignKey("DealerSalesIssueCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerSalesCall.EmailConfigForDealerSalesCall", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "DealerSalesIssueCategory")
                        .WithMany()
                        .HasForeignKey("DealerSalesIssueCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DealerSalesCall.MerchandisingSnapShot", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.SAPTables.DealerInfo", "Dealer")
                        .WithMany()
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "MerchandisingSnapShotCategory")
                        .WithMany()
                        .HasForeignKey("MerchandisingSnapShotCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DemandGeneration.LeadFollowUp", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.DemandGeneration.LeadBusinessAchievement", "BusinessAchievement")
                        .WithMany()
                        .HasForeignKey("BusinessAchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.DemandGeneration.LeadGeneration", "LeadGeneration")
                        .WithMany("LeadFollowUps")
                        .HasForeignKey("LeadGenerationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "ProjectStatus")
                        .WithMany()
                        .HasForeignKey("ProjectStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "ProjectStatusLeadCompleted")
                        .WithMany()
                        .HasForeignKey("ProjectStatusLeadCompletedId");

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "SwappingCompetition")
                        .WithMany()
                        .HasForeignKey("SwappingCompetitionId");

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "TypeOfClient")
                        .WithMany()
                        .HasForeignKey("TypeOfClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.DemandGeneration.LeadGeneration", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "PaintingStage")
                        .WithMany()
                        .HasForeignKey("PaintingStageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "TypeOfClient")
                        .WithMany()
                        .HasForeignKey("TypeOfClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.ELearningAttachment", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.ELearning.ELearningDocument", "ELearningDocument")
                        .WithMany("ELearningAttachments")
                        .HasForeignKey("ELearningDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.ELearningDocument", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.Question", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.ELearning.ELearningDocument", "ELearningDocument")
                        .WithMany()
                        .HasForeignKey("ELearningDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.QuestionOption", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.ELearning.Question", "Question")
                        .WithMany("QuestionOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.QuestionSet", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.ELearning.ELearningDocument", "ELearningDocument")
                        .WithMany()
                        .HasForeignKey("ELearningDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.QuestionSetCollection", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.ELearning.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.ELearning.QuestionSet", "QuestionSet")
                        .WithMany("QuestionSetCollections")
                        .HasForeignKey("QuestionSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.UserQuestionAnswer", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.ELearning.QuestionSet", "QuestionSet")
                        .WithMany()
                        .HasForeignKey("QuestionSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.ELearning.UserQuestionAnswerCollection", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.ELearning.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.ELearning.UserQuestionAnswer", "UserQuestionAnswer")
                        .WithMany("QuestionAnswerCollections")
                        .HasForeignKey("UserQuestionAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.JourneyPlanDetail", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.JourneyPlanMaster", "JourneyPlanMaster")
                        .WithMany("JourneyPlanDetail")
                        .HasForeignKey("JourneyPlanMasterId");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.KPI.CollectionPlan", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Menus.MenuActivity", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Menus.Menu", "Menu")
                        .WithMany("MenuActivities")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Menus.MenuActivityPermission", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Menus.MenuActivity", "Activity")
                        .WithMany("Permissions")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Users.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Menus.MenuPermission", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Menus.Menu", "Menu")
                        .WithMany("MenuPermissions")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Users.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.PainterRegistration.AttachedDealerPainter", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.PainterRegistration.Painter", "Painter")
                        .WithMany("AttachedDealers")
                        .HasForeignKey("PainterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.PainterRegistration.Painter", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "PainterCat")
                        .WithMany()
                        .HasForeignKey("PainterCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.PainterRegistration.PainterAttachment", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.PainterRegistration.Painter", null)
                        .WithMany("Attachments")
                        .HasForeignKey("PainterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.PainterRegistration.PainterCall", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.PainterRegistration.Painter", "Painter")
                        .WithMany("PainterCalls")
                        .HasForeignKey("PainterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.PainterRegistration.PainterCompanyMTDValue", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.PainterRegistration.PainterCall", "PainterCall")
                        .WithMany("PainterCompanyMTDValue")
                        .HasForeignKey("PainterCallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.SAPTables.BrandInfoStatusLog", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.SAPTables.BrandInfo", "BrandInfo")
                        .WithMany()
                        .HasForeignKey("BrandInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.SAPTables.DealerInfoStatusLog", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.SAPTables.DealerInfo", "DealerInfo")
                        .WithMany()
                        .HasForeignKey("DealerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Scheme.SchemeDetail", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Scheme.SchemeMaster", "SchemeMaster")
                        .WithMany("SchemeDetails")
                        .HasForeignKey("SchemeMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Setup.DropdownDetail", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownType", "DropdownType")
                        .WithMany("DropdownDetails")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Tinting.TintingMachine", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Setup.DropdownDetail", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Users.LoginLog", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Users.UserRoleMapping", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Users.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "UserInfo")
                        .WithMany("Roles")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Berger.Data.MsfaEntity.Users.UserZoneAreaMapping", b =>
                {
                    b.HasOne("Berger.Data.MsfaEntity.Users.UserInfo", "UserInfo")
                        .WithMany("UserZoneAreaMappings")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
